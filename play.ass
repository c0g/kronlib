	.section __TEXT,__text_cold_coal,coalesced,pure_instructions
	.align 1
LCOLDB0:
	.section __TEXT,__textcoal_nt,coalesced,pure_instructions
LHOTB0:
	.align 1
	.align 4
	.globl __ZN9basic_kvsIfED1Ev
	.weak_definition __ZN9basic_kvsIfED1Ev
__ZN9basic_kvsIfED1Ev:
LFB8137:
	pushq	%r12
LCFI0:
	movq	%rdi, %r12
	pushq	%rbp
LCFI1:
	pushq	%rbx
LCFI2:
	movq	48(%rdi), %rbp
	movq	40(%rdi), %rbx
	cmpq	%rbx, %rbp
	je	L2
	.align 4
L4:
	movq	(%rbx), %rdi
	testq	%rdi, %rdi
	je	L3
	call	__ZdlPv
L3:
	addq	$24, %rbx
	cmpq	%rbx, %rbp
	jne	L4
	movq	40(%r12), %rbp
L2:
	testq	%rbp, %rbp
	je	L5
	movq	%rbp, %rdi
	call	__ZdlPv
L5:
	movq	16(%r12), %rdi
	testq	%rdi, %rdi
	je	L14
	popq	%rbx
LCFI3:
	popq	%rbp
LCFI4:
	popq	%r12
LCFI5:
	jmp	__ZdlPv
	.align 4
L14:
LCFI6:
	popq	%rbx
LCFI7:
	popq	%rbp
LCFI8:
	popq	%r12
LCFI9:
	ret
LFE8137:
	.section __TEXT,__text_cold_coal,coalesced,pure_instructions
LCOLDE0:
	.section __TEXT,__textcoal_nt,coalesced,pure_instructions
LHOTE0:
	.section __TEXT,__text_cold_coal,coalesced,pure_instructions
	.align 1
LCOLDB1:
	.section __TEXT,__textcoal_nt,coalesced,pure_instructions
LHOTB1:
	.align 1
	.align 4
	.globl __ZNSt6vectorIfSaIfEEC1ERKS1_
	.weak_definition __ZNSt6vectorIfSaIfEEC1ERKS1_
__ZNSt6vectorIfSaIfEEC1ERKS1_:
LFB8228:
	pushq	%r12
LCFI10:
	xorl	%ecx, %ecx
	movq	%rsi, %r12
	pushq	%rbp
LCFI11:
	pushq	%rbx
LCFI12:
	movq	8(%rsi), %rbp
	movq	%rdi, %rbx
	subq	(%rsi), %rbp
	movq	$0, (%rdi)
	movq	$0, 8(%rdi)
	movq	$0, 16(%rdi)
	movq	%rbp, %rax
	sarq	$2, %rax
	testq	%rax, %rax
	je	L19
	movabsq	$4611686018427387903, %rdx
	cmpq	%rdx, %rax
	ja	L24
	movq	%rbp, %rdi
	call	__Znwm
	movq	%rax, %rcx
L19:
	addq	%rcx, %rbp
	movq	%rcx, (%rbx)
	movq	%rcx, 8(%rbx)
	movq	%rbp, 16(%rbx)
	movq	(%r12), %rsi
	movq	8(%r12), %rbp
	subq	%rsi, %rbp
	movq	%rbp, %rax
	sarq	$2, %rax
	testq	%rax, %rax
	je	L22
	movq	%rcx, %rdi
	movq	%rbp, %rdx
	call	_memmove
	movq	%rax, %rcx
L22:
	addq	%rcx, %rbp
	movq	%rbp, 8(%rbx)
	popq	%rbx
LCFI13:
	popq	%rbp
LCFI14:
	popq	%r12
LCFI15:
	ret
L24:
LCFI16:
	call	__ZSt17__throw_bad_allocv
LFE8228:
	.section __TEXT,__text_cold_coal,coalesced,pure_instructions
LCOLDE1:
	.section __TEXT,__textcoal_nt,coalesced,pure_instructions
LHOTE1:
	.section __TEXT,__text_cold_coal,coalesced,pure_instructions
	.align 1
LCOLDB2:
	.section __TEXT,__textcoal_nt,coalesced,pure_instructions
LHOTB2:
	.align 1
	.align 4
	.globl __ZNSt6vectorIS_IfSaIfEESaIS1_EED1Ev
	.weak_definition __ZNSt6vectorIS_IfSaIfEESaIS1_EED1Ev
__ZNSt6vectorIS_IfSaIfEESaIS1_EED1Ev:
LFB8247:
	pushq	%r12
LCFI17:
	pushq	%rbp
LCFI18:
	pushq	%rbx
LCFI19:
	movq	8(%rdi), %rbp
	movq	(%rdi), %rbx
	cmpq	%rbx, %rbp
	je	L26
	movq	%rdi, %r12
	.align 4
L28:
	movq	(%rbx), %rdi
	testq	%rdi, %rdi
	je	L27
	call	__ZdlPv
L27:
	addq	$24, %rbx
	cmpq	%rbx, %rbp
	jne	L28
	movq	(%r12), %rbp
L26:
	testq	%rbp, %rbp
	je	L34
	popq	%rbx
LCFI20:
	movq	%rbp, %rdi
	popq	%rbp
LCFI21:
	popq	%r12
LCFI22:
	jmp	__ZdlPv
	.align 4
L34:
LCFI23:
	popq	%rbx
LCFI24:
	popq	%rbp
LCFI25:
	popq	%r12
LCFI26:
	ret
LFE8247:
	.section __TEXT,__text_cold_coal,coalesced,pure_instructions
LCOLDE2:
	.section __TEXT,__textcoal_nt,coalesced,pure_instructions
LHOTE2:
	.section __TEXT,__text_cold_coal,coalesced,pure_instructions
	.align 1
LCOLDB3:
	.section __TEXT,__textcoal_nt,coalesced,pure_instructions
LHOTB3:
	.align 1
	.align 4
	.globl __ZNSt6vectorIS_IfSaIfEESaIS1_EEC1ERKS3_
	.weak_definition __ZNSt6vectorIS_IfSaIfEESaIS1_EEC1ERKS3_
__ZNSt6vectorIS_IfSaIfEESaIS1_EEC1ERKS3_:
LFB8253:
	movabsq	$-6148914691236517205, %rax
	pushq	%r15
LCFI27:
	movq	%rdi, %r15
	pushq	%r14
LCFI28:
	pushq	%r13
LCFI29:
	pushq	%r12
LCFI30:
	pushq	%rbp
LCFI31:
	movq	%rsi, %rbp
	pushq	%rbx
LCFI32:
	subq	$24, %rsp
LCFI33:
	movq	8(%rsi), %rbx
	subq	(%rsi), %rbx
	movq	$0, (%rdi)
	movq	$0, 8(%rdi)
	movq	$0, 16(%rdi)
	movq	%rbx, %rdx
	sarq	$3, %rdx
	imulq	%rdx, %rax
	testq	%rax, %rax
	je	L72
	movabsq	$768614336404564650, %rdx
	cmpq	%rdx, %rax
	ja	L73
	movq	%rbx, %rdi
LEHB0:
	call	__Znwm
LEHE0:
	movq	%rax, 8(%rsp)
L38:
	addq	%rax, %rbx
	movq	%rax, (%r15)
	movq	%rbx, 16(%r15)
	movq	%rax, %rbx
	movq	%rax, 8(%r15)
	movq	8(%rbp), %r13
	movq	0(%rbp), %rbp
	cmpq	%rbp, %r13
	je	L40
	movabsq	$4611686018427387903, %r14
	.align 4
L47:
	testq	%rbx, %rbx
	je	L41
	movq	8(%rbp), %r12
	xorl	%ecx, %ecx
	subq	0(%rbp), %r12
	movq	$0, (%rbx)
	movq	$0, 8(%rbx)
	movq	$0, 16(%rbx)
	movq	%r12, %rax
	sarq	$2, %rax
	testq	%rax, %rax
	je	L43
	cmpq	%r14, %rax
	ja	L74
	movq	%r12, %rdi
LEHB1:
	call	__Znwm
	movq	%rax, %rcx
L43:
	leaq	(%rcx,%r12), %rax
	movq	%rcx, (%rbx)
	movq	%rax, 16(%rbx)
	movq	%rcx, 8(%rbx)
	movq	0(%rbp), %rsi
	movq	8(%rbp), %r12
	subq	%rsi, %r12
	movq	%r12, %rax
	sarq	$2, %rax
	testq	%rax, %rax
	je	L46
	movq	%rcx, %rdi
	movq	%r12, %rdx
	call	_memmove
	movq	%rax, %rcx
L46:
	addq	%rcx, %r12
	movq	%r12, 8(%rbx)
L41:
	addq	$24, %rbp
	addq	$24, %rbx
	cmpq	%rbp, %r13
	jne	L47
L40:
	movq	%rbx, 8(%r15)
	addq	$24, %rsp
LCFI34:
	popq	%rbx
LCFI35:
	popq	%rbp
LCFI36:
	popq	%r12
LCFI37:
	popq	%r13
LCFI38:
	popq	%r14
LCFI39:
	popq	%r15
LCFI40:
	ret
L72:
LCFI41:
	movq	$0, 8(%rsp)
	movq	8(%rsp), %rax
	jmp	L38
L74:
	call	__ZSt17__throw_bad_allocv
LEHE1:
L57:
	jmp	L48
L73:
LEHB2:
	call	__ZSt17__throw_bad_allocv
LEHE2:
L48:
	movq	%rax, %rdi
	vzeroupper
	call	___cxa_begin_catch
	cmpq	%rbx, 8(%rsp)
	je	L51
L65:
	movq	8(%rsp), %rax
	movq	(%rax), %rdi
	testq	%rdi, %rdi
	je	L50
	call	__ZdlPv
L50:
	addq	$24, 8(%rsp)
	movq	8(%rsp), %rax
	cmpq	%rbx, %rax
	jne	L65
L51:
LEHB3:
	call	___cxa_rethrow
LEHE3:
L56:
	movq	%rax, %rbx
L53:
	vzeroupper
	call	___cxa_end_catch
	movq	(%r15), %rdi
	testq	%rdi, %rdi
	je	L54
	call	__ZdlPv
L54:
	movq	%rbx, %rdi
LEHB4:
	call	__Unwind_Resume
LEHE4:
LFE8253:
	.section __DATA,__gcc_except_tab
GCC_except_table0:
	.align 3
LLSDA8253:
	.byte	0xff
	.byte	0
	.byte	0x4d
	.byte	0x3
	.byte	0x41
	.set L$set$0,LEHB0-LFB8253
	.long L$set$0
	.set L$set$1,LEHE0-LEHB0
	.long L$set$1
	.long	0
	.byte	0
	.set L$set$2,LEHB1-LFB8253
	.long L$set$2
	.set L$set$3,LEHE1-LEHB1
	.long L$set$3
	.set L$set$4,L57-LFB8253
	.long L$set$4
	.byte	0x1
	.set L$set$5,LEHB2-LFB8253
	.long L$set$5
	.set L$set$6,LEHE2-LEHB2
	.long L$set$6
	.long	0
	.byte	0
	.set L$set$7,LEHB3-LFB8253
	.long L$set$7
	.set L$set$8,LEHE3-LEHB3
	.long L$set$8
	.set L$set$9,L56-LFB8253
	.long L$set$9
	.byte	0
	.set L$set$10,LEHB4-LFB8253
	.long L$set$10
	.set L$set$11,LEHE4-LEHB4
	.long L$set$11
	.long	0
	.byte	0
	.byte	0x1
	.byte	0
	.align 3
	.quad	0
	.section __TEXT,__textcoal_nt,coalesced,pure_instructions
	.section __TEXT,__text_cold_coal,coalesced,pure_instructions
LCOLDE3:
	.section __TEXT,__textcoal_nt,coalesced,pure_instructions
LHOTE3:
	.section __TEXT,__text_cold_coal,coalesced,pure_instructions
	.align 1
LCOLDB4:
	.section __TEXT,__textcoal_nt,coalesced,pure_instructions
LHOTB4:
	.align 1
	.align 4
	.globl __ZNSt6vectorIfSaIfEE19_M_emplace_back_auxIJRKfEEEvDpOT_
	.weak_definition __ZNSt6vectorIfSaIfEE19_M_emplace_back_auxIJRKfEEEvDpOT_
__ZNSt6vectorIfSaIfEE19_M_emplace_back_auxIJRKfEEEvDpOT_:
LFB8559:
	pushq	%r14
LCFI42:
	pushq	%r13
LCFI43:
	pushq	%r12
LCFI44:
	movq	%rsi, %r12
	pushq	%rbp
LCFI45:
	pushq	%rbx
LCFI46:
	movq	8(%rdi), %rax
	movq	%rdi, %rbx
	subq	(%rdi), %rax
	sarq	$2, %rax
	testq	%rax, %rax
	je	L83
	leaq	(%rax,%rax), %rdx
	cmpq	%rdx, %rax
	jbe	L96
L84:
	movq	$-4, %r13
	jmp	L76
	.align 4
L83:
	movl	$4, %r13d
L76:
	movq	%r13, %rdi
	call	__Znwm
	movq	%rax, %rbp
L82:
	movq	(%rbx), %r14
	movq	8(%rbx), %rdx
	vmovss	(%r12), %xmm0
	movq	%rbp, %r12
	subq	%r14, %rdx
	movq	%rdx, %rax
	sarq	$2, %rax
	addq	%rdx, %r12
	je	L78
	vmovss	%xmm0, (%r12)
L78:
	testq	%rax, %rax
	jne	L97
	addq	$4, %r12
	testq	%r14, %r14
	je	L81
L80:
	movq	%r14, %rdi
	call	__ZdlPv
L81:
	movq	%rbp, (%rbx)
	addq	%r13, %rbp
	movq	%r12, 8(%rbx)
	movq	%rbp, 16(%rbx)
	popq	%rbx
LCFI47:
	popq	%rbp
LCFI48:
	popq	%r12
LCFI49:
	popq	%r13
LCFI50:
	popq	%r14
LCFI51:
	ret
	.align 4
L97:
LCFI52:
	movq	%r14, %rsi
	movq	%rbp, %rdi
	addq	$4, %r12
	call	_memmove
	jmp	L80
L96:
	movabsq	$4611686018427387903, %rcx
	cmpq	%rcx, %rdx
	ja	L84
	xorl	%r13d, %r13d
	xorl	%ebp, %ebp
	testq	%rdx, %rdx
	je	L82
	leaq	0(,%rax,8), %r13
	jmp	L76
LFE8559:
	.section __TEXT,__text_cold_coal,coalesced,pure_instructions
LCOLDE4:
	.section __TEXT,__textcoal_nt,coalesced,pure_instructions
LHOTE4:
	.section __TEXT,__text_cold_coal,coalesced,pure_instructions
	.align 1
LCOLDB5:
	.section __TEXT,__textcoal_nt,coalesced,pure_instructions
LHOTB5:
	.align 1
	.align 4
	.globl __ZNSt5dequeIlSaIlEE17_M_reallocate_mapEmb
	.weak_definition __ZNSt5dequeIlSaIlEE17_M_reallocate_mapEmb
__ZNSt5dequeIlSaIlEE17_M_reallocate_mapEmb:
LFB8698:
	pushq	%r15
LCFI53:
	pushq	%r14
LCFI54:
	movl	%edx, %r14d
	pushq	%r13
LCFI55:
	pushq	%r12
LCFI56:
	movq	%rsi, %r12
	pushq	%rbp
LCFI57:
	pushq	%rbx
LCFI58:
	movq	%rdi, %rbx
	subq	$24, %rsp
LCFI59:
	movq	72(%rdi), %rcx
	movq	40(%rdi), %rsi
	movq	8(%rdi), %rax
	movq	%rcx, %rbp
	subq	%rsi, %rbp
	sarq	$3, %rbp
	addq	$1, %rbp
	leaq	0(%rbp,%r12), %rdx
	leaq	(%rdx,%rdx), %rdi
	cmpq	%rdi, %rax
	jbe	L99
	subq	%rdx, %rax
	salq	$3, %r12
	movl	$0, %edx
	shrq	%rax
	testb	%r14b, %r14b
	cmove	%rdx, %r12
	leaq	(%r12,%rax,8), %r12
	addq	(%rbx), %r12
	cmpq	%r12, %rsi
	jbe	L101
	leaq	8(%rcx), %rdx
	subq	%rsi, %rdx
	movq	%rdx, %rax
	sarq	$3, %rax
	testq	%rax, %rax
	je	L117
	movq	%r12, %rdi
	salq	$3, %rbp
	call	_memmove
	jmp	L103
	.align 4
L99:
	cmpq	%r12, %rax
	movq	%r12, %rcx
	cmovnb	%rax, %rcx
	leaq	2(%rax,%rcx), %r13
	movabsq	$2305843009213693951, %rax
	cmpq	%rax, %r13
	ja	L118
	leaq	0(,%r13,8), %rdi
	movq	%rdx, 8(%rsp)
	salq	$3, %r12
	call	__Znwm
	movq	8(%rsp), %rdx
	movl	$0, %esi
	movq	%rax, %r15
	movq	%r13, %rax
	subq	%rdx, %rax
	shrq	%rax
	testb	%r14b, %r14b
	cmove	%rsi, %r12
	movq	40(%rbx), %rsi
	leaq	(%r12,%rax,8), %r12
	movq	72(%rbx), %rax
	addq	%r15, %r12
	leaq	8(%rax), %rdx
	subq	%rsi, %rdx
	movq	%rdx, %rax
	sarq	$3, %rax
	testq	%rax, %rax
	jne	L119
L107:
	movq	(%rbx), %rdi
	call	__ZdlPv
	movq	%r15, (%rbx)
	movq	%r13, 8(%rbx)
L117:
	salq	$3, %rbp
L103:
	movq	%r12, 40(%rbx)
	movq	(%r12), %rax
	movq	%rax, 24(%rbx)
	addq	$512, %rax
	movq	%rax, 32(%rbx)
	leaq	-8(%r12,%rbp), %rax
	movq	%rax, 72(%rbx)
	movq	(%rax), %rax
	movq	%rax, 56(%rbx)
	addq	$512, %rax
	movq	%rax, 64(%rbx)
	addq	$24, %rsp
LCFI60:
	popq	%rbx
LCFI61:
	popq	%rbp
LCFI62:
	popq	%r12
LCFI63:
	popq	%r13
LCFI64:
	popq	%r14
LCFI65:
	popq	%r15
LCFI66:
	ret
	.align 4
L101:
LCFI67:
	leaq	8(%rcx), %rdx
	salq	$3, %rbp
	subq	%rsi, %rdx
	movq	%rdx, %rax
	sarq	$3, %rax
	testq	%rax, %rax
	je	L103
	movq	%rbp, %rdi
	subq	%rdx, %rdi
	addq	%r12, %rdi
	call	_memmove
	jmp	L103
	.align 4
L119:
	movq	%r12, %rdi
	call	_memmove
	jmp	L107
L118:
	call	__ZSt17__throw_bad_allocv
LFE8698:
	.section __TEXT,__text_cold_coal,coalesced,pure_instructions
LCOLDE5:
	.section __TEXT,__textcoal_nt,coalesced,pure_instructions
LHOTE5:
	.section __TEXT,__text_cold_coal,coalesced,pure_instructions
LCOLDB7:
	.section __TEXT,__textcoal_nt,coalesced,pure_instructions
LHOTB7:
	.align 4
	.globl __Z20kronvecstack_dot_vecIfESt6vectorIT_SaIS1_EERK9basic_kvsIS1_ERKS3_
	.weak_definition __Z20kronvecstack_dot_vecIfESt6vectorIT_SaIS1_EERK9basic_kvsIS1_ERKS3_
__Z20kronvecstack_dot_vecIfESt6vectorIT_SaIS1_EERK9basic_kvsIS1_ERKS3_:
LFB8257:
	leaq	8(%rsp), %r10
LCFI68:
	andq	$-32, %rsp
	vpxor	%xmm0, %xmm0, %xmm0
	pushq	-8(%r10)
	pushq	%rbp
LCFI69:
	movq	%rsp, %rbp
	pushq	%r15
LCFI70:
	movq	%rsi, %r15
	pushq	%r14
LCFI71:
	movq	%rdi, %r14
	pushq	%r13
	pushq	%r12
	pushq	%r10
LCFI72:
	pushq	%rbx
	subq	$192, %rsp
LCFI73:
	movq	%rdi, -208(%rbp)
	movl	$64, %edi
	movq	%rsi, -184(%rbp)
	movq	%rdx, -216(%rbp)
	movq	$0, -144(%rbp)
	vmovdqu	%ymm0, -128(%rbp)
	vmovdqu	%ymm0, -96(%rbp)
	movq	$8, -136(%rbp)
	vzeroupper
LEHB5:
	call	__Znwm
LEHE5:
	movq	-136(%rbp), %rdx
	movl	$512, %edi
	movq	%rax, -144(%rbp)
	leaq	-4(,%rdx,4), %rdx
	andq	$-8, %rdx
	leaq	(%rax,%rdx), %rbx
LEHB6:
	call	__Znwm
LEHE6:
	movq	8(%r15), %rsi
	movq	%rax, (%rbx)
	leaq	512(%rax), %rdx
	movq	%rbx, -104(%rbp)
	movq	%rbx, -72(%rbp)
	movq	%rax, -120(%rbp)
	movq	%rsi, %rbx
	movq	%rdx, -112(%rbp)
	subq	$1, %rbx
	movq	%rax, -88(%rbp)
	movq	%rdx, -80(%rbp)
	movq	%rax, -128(%rbp)
	movq	%rax, -96(%rbp)
	movq	$0, (%r14)
	movq	$0, 8(%r14)
	movq	$0, 16(%r14)
	movq	%rsi, -168(%rbp)
	js	L167
	leaq	-144(%rbp), %r15
	movq	%rax, %rcx
	movl	$1, %r13d
	leaq	0(,%rbx,8), %r12
	jmp	L130
L213:
	movq	%rax, %rdx
	subq	$8, %rdx
	je	L127
	movq	%r13, -8(%rax)
L127:
	movq	%rdx, -128(%rbp)
	movq	%rdx, %rax
L128:
	subq	$1, %rbx
	subq	$8, %r12
	cmpq	$-1, %rbx
	je	L212
L130:
	movq	-184(%rbp), %rsi
	movq	16(%rsi), %rdx
	imulq	(%rdx,%r12), %r13
	cmpq	%rcx, %rax
	jne	L213
	movq	-104(%rbp), %r14
	movq	%r14, %rax
	subq	-144(%rbp), %rax
	sarq	$3, %rax
	testq	%rax, %rax
	je	L214
L129:
	movl	$512, %edi
LEHB7:
	call	__Znwm
	movq	%rax, -8(%r14)
	movq	-104(%rbp), %rax
	leaq	-8(%rax), %rdx
	movq	%rdx, -104(%rbp)
	movq	-8(%rax), %rcx
	leaq	512(%rcx), %rax
	movq	%rcx, -120(%rbp)
	movq	%rax, -112(%rbp)
	leaq	504(%rcx), %rax
	testq	%rax, %rax
	movq	%rax, -128(%rbp)
	je	L128
	subq	$1, %rbx
	subq	$8, %r12
	movq	%r13, 504(%rcx)
	cmpq	$-1, %rbx
	jne	L130
L212:
	movq	-80(%rbp), %rsi
	movq	-96(%rbp), %rax
	leaq	-8(%rsi), %rdx
	cmpq	%rdx, %rax
	je	L131
	testq	%rax, %rax
	je	L132
L167:
	movq	$1, (%rax)
L132:
	addq	$8, %rax
	movq	%rax, -96(%rbp)
L133:
	leaq	-148(%rbp), %rax
	xorl	%r15d, %r15d
	movq	%rax, -224(%rbp)
	movq	-184(%rbp), %rax
	cmpq	$0, (%rax)
	jle	L152
L199:
	movq	-216(%rbp), %rax
	vxorps	%xmm1, %xmm1, %xmm1
	movl	$0x00000000, -148(%rbp)
	movq	(%rax), %rdi
	movq	8(%rax), %rax
	movq	%rdi, -192(%rbp)
	movq	%rax, -168(%rbp)
	subq	%rdi, %rax
	sarq	$2, %rax
	testq	%rax, %rax
	movq	%rax, -200(%rbp)
	je	L139
	movq	-184(%rbp), %rax
	vxorps	%xmm1, %xmm1, %xmm1
	movq	$0, -168(%rbp)
	movq	8(%rax), %rbx
	.align 4
L148:
	movq	-192(%rbp), %rax
	testq	%rbx, %rbx
	movq	-168(%rbp), %rdi
	vmovss	(%rax,%rdi,4), %xmm0
	jle	L140
	movq	-128(%rbp), %rcx
	xorl	%r9d, %r9d
	xorl	%r8d, %r8d
	movq	%rbx, %r14
	movq	-184(%rbp), %rax
	movq	-104(%rbp), %r12
	movq	%rcx, %rsi
	subq	-120(%rbp), %rsi
	movq	16(%rax), %r13
	movq	40(%rax), %r10
	sarq	$3, %rsi
	leaq	1(%rsi), %rdi
	movq	%r13, -176(%rbp)
	movq	%rdi, %r11
	notq	%r11
	jmp	L147
	.align 4
L144:
	addq	$8, %rcx
	movq	%rcx, %rbx
L166:
	movq	%rdx, %rax
	addq	$1, %rsi
	addq	$24, %r10
	cqto
	addq	$1, %rdi
	subq	$1, %r11
	idivq	(%rbx)
	movq	-176(%rbp), %rbx
	movq	%r15, %rdx
	imulq	(%rbx,%r9), %rdx
	addq	$8, %r9
	addq	%rdx, %rax
	movq	-24(%r10), %rdx
	cmpq	%r14, %r8
	vmulss	(%rdx,%rax,4), %xmm0, %xmm0
	je	L215
L147:
	cmpq	$63, %rsi
	movq	%rcx, %rbx
	jbe	L161
	movq	%rsi, %rax
	sarq	$6, %rax
	testq	%rsi, %rsi
	jle	L216
L143:
	movq	%rax, %rdx
	movq	(%r12,%rax,8), %rax
	movq	%rsi, %rbx
	salq	$6, %rdx
	subq	%rdx, %rbx
	leaq	(%rax,%rbx,8), %rbx
L161:
	movq	-168(%rbp), %rax
	addq	$1, %r8
	cqto
	idivq	(%rbx)
	cmpq	$63, %rdi
	jbe	L144
	movq	%rdi, %rax
	sarq	$6, %rax
	testq	%rdi, %rdi
	jle	L217
L146:
	movq	%rax, %rbx
	movq	(%r12,%rax,8), %rax
	movq	%rdi, %r13
	addq	$8, %rcx
	salq	$6, %rbx
	subq	%rbx, %r13
	leaq	(%rax,%r13,8), %rbx
	jmp	L166
	.align 4
L216:
	leaq	1(%r11), %rax
	shrq	$6, %rax
	notq	%rax
	jmp	L143
	.align 4
L217:
	movq	%r11, %rax
	shrq	$6, %rax
	notq	%rax
	jmp	L146
	.align 4
L215:
	movq	%r14, %rbx
L140:
	addq	$1, -168(%rbp)
	vaddss	%xmm0, %xmm1, %xmm1
	movq	-168(%rbp), %rax
	cmpq	-200(%rbp), %rax
	vmovss	%xmm1, -148(%rbp)
	jne	L148
L139:
	movq	-208(%rbp), %rsi
	movq	8(%rsi), %rax
	cmpq	16(%rsi), %rax
	je	L149
	testq	%rax, %rax
	je	L150
	vmovss	%xmm1, (%rax)
L150:
	movq	-208(%rbp), %rdi
	addq	$4, %rax
	movq	%rax, 8(%rdi)
L151:
	movq	-184(%rbp), %rax
	addq	$1, %r15
	cmpq	%r15, (%rax)
	jg	L199
L152:
	movq	-144(%rbp), %rdi
	testq	%rdi, %rdi
	je	L206
	movq	-72(%rbp), %rax
	movq	-104(%rbp), %rbx
	leaq	8(%rax), %r12
	cmpq	%rbx, %r12
	jbe	L154
L155:
	movq	(%rbx), %rdi
	addq	$8, %rbx
	call	__ZdlPv
	cmpq	%rbx, %r12
	ja	L155
	movq	-144(%rbp), %rdi
L154:
	call	__ZdlPv
L206:
	movq	-208(%rbp), %rax
	addq	$192, %rsp
	popq	%rbx
	popq	%r10
LCFI74:
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	leaq	-8(%r10), %rsp
LCFI75:
	ret
L149:
LCFI76:
	movq	%rsi, %rdi
	movq	-224(%rbp), %rsi
	call	__ZNSt6vectorIfSaIfEE19_M_emplace_back_auxIJRKfEEEvDpOT_
	jmp	L151
L214:
	movl	$1, %edx
	movl	$1, %esi
	movq	%r15, %rdi
	call	__ZNSt5dequeIlSaIlEE17_M_reallocate_mapEmb
	movq	-104(%rbp), %r14
	jmp	L129
L171:
	jmp	L123
L131:
	movq	-72(%rbp), %rbx
	movq	-136(%rbp), %rsi
	movq	%rbx, %rax
	subq	-144(%rbp), %rax
	sarq	$3, %rax
	subq	%rax, %rsi
	cmpq	$1, %rsi
	jbe	L218
L134:
	movl	$512, %edi
	call	__Znwm
	movq	%rax, 8(%rbx)
	movq	-96(%rbp), %rax
	testq	%rax, %rax
	je	L135
	movq	$1, (%rax)
L135:
	movq	-72(%rbp), %rax
	leaq	8(%rax), %rdx
	movq	%rdx, -72(%rbp)
	movq	8(%rax), %rax
	leaq	512(%rax), %rdx
	movq	%rax, -88(%rbp)
	movq	%rdx, -80(%rbp)
	movq	%rax, -96(%rbp)
	jmp	L133
L218:
	leaq	-144(%rbp), %rdi
	xorl	%edx, %edx
	movl	$1, %esi
	call	__ZNSt5dequeIlSaIlEE17_M_reallocate_mapEmb
LEHE7:
	movq	-72(%rbp), %rbx
	jmp	L134
L169:
	movq	%rax, %r13
	jmp	L156
L123:
	movq	%rax, %rdi
	vzeroupper
	call	___cxa_begin_catch
LEHB8:
	call	___cxa_rethrow
LEHE8:
L156:
	movq	-208(%rbp), %rax
	movq	(%rax), %rdi
	testq	%rdi, %rdi
	je	L205
	vzeroupper
	call	__ZdlPv
L157:
	movq	-144(%rbp), %rdi
	testq	%rdi, %rdi
	je	L158
	movq	-72(%rbp), %rax
	movq	-104(%rbp), %rbx
	leaq	8(%rax), %r12
	cmpq	%rbx, %r12
	jbe	L159
L160:
	movq	(%rbx), %rdi
	addq	$8, %rbx
	call	__ZdlPv
	cmpq	%rbx, %r12
	ja	L160
	movq	-144(%rbp), %rdi
L159:
	call	__ZdlPv
L158:
	movq	%r13, %rdi
LEHB9:
	call	__Unwind_Resume
LEHE9:
L172:
	movq	%rax, %rbx
L124:
	vzeroupper
	call	___cxa_end_catch
	movq	%rbx, %rdi
	call	___cxa_begin_catch
	movq	-144(%rbp), %rdi
	call	__ZdlPv
	movq	$0, -144(%rbp)
	movq	$0, -136(%rbp)
LEHB10:
	call	___cxa_rethrow
LEHE10:
L205:
	vzeroupper
	jmp	L157
L170:
	movq	%rax, %rbx
L125:
	vzeroupper
	call	___cxa_end_catch
	movq	%rbx, %rdi
LEHB11:
	call	__Unwind_Resume
LEHE11:
LFE8257:
	.section __DATA,__gcc_except_tab
GCC_except_table1:
	.align 3
LLSDA8257:
	.byte	0xff
	.byte	0
	.byte	0x6d
	.byte	0x3
	.byte	0x5b
	.set L$set$12,LEHB5-LFB8257
	.long L$set$12
	.set L$set$13,LEHE5-LEHB5
	.long L$set$13
	.long	0
	.byte	0
	.set L$set$14,LEHB6-LFB8257
	.long L$set$14
	.set L$set$15,LEHE6-LEHB6
	.long L$set$15
	.set L$set$16,L171-LFB8257
	.long L$set$16
	.byte	0x1
	.set L$set$17,LEHB7-LFB8257
	.long L$set$17
	.set L$set$18,LEHE7-LEHB7
	.long L$set$18
	.set L$set$19,L169-LFB8257
	.long L$set$19
	.byte	0
	.set L$set$20,LEHB8-LFB8257
	.long L$set$20
	.set L$set$21,LEHE8-LEHB8
	.long L$set$21
	.set L$set$22,L172-LFB8257
	.long L$set$22
	.byte	0x3
	.set L$set$23,LEHB9-LFB8257
	.long L$set$23
	.set L$set$24,LEHE9-LEHB9
	.long L$set$24
	.long	0
	.byte	0
	.set L$set$25,LEHB10-LFB8257
	.long L$set$25
	.set L$set$26,LEHE10-LEHB10
	.long L$set$26
	.set L$set$27,L170-LFB8257
	.long L$set$27
	.byte	0
	.set L$set$28,LEHB11-LFB8257
	.long L$set$28
	.set L$set$29,LEHE11-LEHB11
	.long L$set$29
	.long	0
	.byte	0
	.byte	0x1
	.byte	0
	.byte	0
	.byte	0x7d
	.align 3
	.quad	0
	.section __TEXT,__textcoal_nt,coalesced,pure_instructions
	.section __TEXT,__text_cold_coal,coalesced,pure_instructions
LCOLDE7:
	.section __TEXT,__textcoal_nt,coalesced,pure_instructions
LHOTE7:
	.cstring
LC8:
	.ascii ", \0"
	.section __TEXT,__text_cold,regular,pure_instructions
LCOLDB9:
	.section __TEXT,__text_startup,regular,pure_instructions
LHOTB9:
	.align 4
	.globl _main
_main:
LFB8134:
	pushq	%r15
LCFI77:
	vxorps	%xmm2, %xmm2, %xmm2
	xorl	%edx, %edx
	xorl	%eax, %eax
	pushq	%r14
LCFI78:
	pushq	%r13
LCFI79:
	pushq	%r12
LCFI80:
	pushq	%rbp
LCFI81:
	pushq	%rbx
LCFI82:
	xorl	%ebx, %ebx
	vcvtsi2ss	%ebx, %xmm2, %xmm2
	subq	$408, %rsp
LCFI83:
	movq	$0, 32(%rsp)
	leaq	32(%rsp), %r13
	movq	$0, 40(%rsp)
	leaq	64(%rsp), %r14
	movq	$0, 48(%rsp)
	leaq	96(%rsp), %r15
	movq	$0, 64(%rsp)
	vmovd	%xmm2, %ebp
	movq	$0, 72(%rsp)
	leaq	320(%rsp), %r12
	movq	$0, 80(%rsp)
	movq	$0, 96(%rsp)
	movq	$0, 104(%rsp)
	movq	$0, 112(%rsp)
	jmp	L230
	.align 4
L395:
	testq	%rax, %rax
	je	L221
	movl	%ebp, (%rax)
L221:
	addq	$4, %rax
	movq	%rax, 40(%rsp)
L222:
	addl	$1, %ebx
	vxorps	%xmm1, %xmm1, %xmm1
	movq	72(%rsp), %rax
	vcvtsi2ss	%ebx, %xmm1, %xmm1
	cmpq	80(%rsp), %rax
	vmovss	%xmm1, 320(%rsp)
	vmovd	%xmm1, %ebp
	je	L223
	testq	%rax, %rax
	je	L224
	vmovss	%xmm1, (%rax)
L224:
	addq	$4, %rax
	movq	%rax, 72(%rsp)
L225:
	leal	1(%rbx), %eax
	vxorps	%xmm0, %xmm0, %xmm0
	vcvtsi2ss	%eax, %xmm0, %xmm0
	movq	104(%rsp), %rax
	cmpq	112(%rsp), %rax
	vmovss	%xmm0, 320(%rsp)
	je	L226
	testq	%rax, %rax
	je	L227
	vmovss	%xmm0, (%rax)
L227:
	addq	$4, %rax
	cmpl	$1000, %ebx
	movq	%rax, 104(%rsp)
	je	L229
L396:
	movq	40(%rsp), %rax
	movq	48(%rsp), %rdx
L230:
	cmpq	%rdx, %rax
	movl	%ebp, 320(%rsp)
	jne	L395
	movq	%r12, %rsi
	movq	%r13, %rdi
LEHB12:
	call	__ZNSt6vectorIfSaIfEE19_M_emplace_back_auxIJRKfEEEvDpOT_
	jmp	L222
	.align 4
L223:
	movq	%r12, %rsi
	movq	%r14, %rdi
	call	__ZNSt6vectorIfSaIfEE19_M_emplace_back_auxIJRKfEEEvDpOT_
	jmp	L225
	.align 4
L226:
	movq	%r12, %rsi
	movq	%r15, %rdi
	call	__ZNSt6vectorIfSaIfEE19_M_emplace_back_auxIJRKfEEEvDpOT_
LEHE12:
	cmpl	$1000, %ebx
	jne	L396
	.align 4
L229:
	movq	$0, 128(%rsp)
	xorl	%edx, %edx
	xorl	%eax, %eax
	xorl	%ebx, %ebx
	movq	$0, 136(%rsp)
	leaq	320(%rsp), %rbp
	movq	$0, 144(%rsp)
	leaq	128(%rsp), %r12
	jmp	L235
	.align 4
L397:
	testq	%rax, %rax
	je	L232
	vmovss	%xmm0, (%rax)
L232:
	addl	$1, %ebx
	addq	$4, %rax
	cmpl	$1000, %ebx
	movq	%rax, 136(%rsp)
	je	L234
L398:
	movq	136(%rsp), %rax
	movq	144(%rsp), %rdx
L235:
	vxorps	%xmm0, %xmm0, %xmm0
	vcvtsi2ss	%ebx, %xmm0, %xmm0
	cmpq	%rax, %rdx
	vmovss	%xmm0, 320(%rsp)
	jne	L397
	movq	%rbp, %rsi
	movq	%r12, %rdi
LEHB13:
	call	__ZNSt6vectorIfSaIfEE19_M_emplace_back_auxIJRKfEEEvDpOT_
	addl	$1, %ebx
	cmpl	$1000, %ebx
	jne	L398
	.align 4
L234:
	movl	$24, %edi
	call	__Znwm
LEHE13:
	movq	%rax, 8(%rsp)
	leaq	32(%rsp), %rsi
	movq	%rax, %rcx
	movq	_._72(%rip), %rax
	movq	%rax, (%rcx)
	movq	8+_._72(%rip), %rax
	movq	%rax, 8(%rcx)
	movq	16+_._72(%rip), %rax
	movq	%rax, 16(%rcx)
	leaq	320(%rsp), %rax
	movq	%rax, %rdi
	movq	%rax, %r12
	movq	%rax, (%rsp)
LEHB14:
	call	__ZNSt6vectorIfSaIfEEC1ERKS1_
	leaq	64(%rsp), %rsi
	leaq	24(%r12), %rdi
	call	__ZNSt6vectorIfSaIfEEC1ERKS1_
	leaq	96(%rsp), %rsi
	leaq	48(%r12), %rdi
	call	__ZNSt6vectorIfSaIfEEC1ERKS1_
LEHE14:
	movl	$72, %edi
	movq	$0, 160(%rsp)
	movq	$0, 168(%rsp)
	movq	$0, 176(%rsp)
LEHB15:
	call	__Znwm
LEHE15:
	leaq	72(%rax), %r13
	movq	%rax, 16(%rsp)
	movq	%rax, %rbx
	movabsq	$4611686018427387903, %r14
	movq	%rax, 160(%rsp)
	movq	%r13, 176(%rsp)
	.align 4
L241:
	testq	%rbx, %rbx
	je	L236
	movq	(%r12), %rsi
	xorl	%r8d, %r8d
	movq	$0, (%rbx)
	movq	8(%r12), %rbp
	movq	$0, 8(%rbx)
	movq	$0, 16(%rbx)
	subq	%rsi, %rbp
	movq	%rbp, %rax
	movq	%rbp, %r15
	sarq	$2, %rax
	testq	%rax, %rax
	je	L238
	cmpq	%r14, %rax
	ja	L399
	movq	%rbp, %rdi
LEHB16:
	call	__Znwm
LEHE16:
	movq	(%r12), %rsi
	movq	%rax, %r8
	movq	8(%r12), %rdx
	subq	%rsi, %rdx
	movq	%rdx, %rax
	movq	%rdx, %r15
	sarq	$2, %rax
L238:
	addq	%r8, %rbp
	testq	%rax, %rax
	movq	%r8, (%rbx)
	movq	%r8, 8(%rbx)
	movq	%rbp, 16(%rbx)
	je	L240
	movq	%r8, %rdi
	movq	%r15, %rdx
	call	_memmove
	movq	%rax, %r8
L240:
	leaq	(%r8,%r15), %rdx
	movq	%rdx, 8(%rbx)
L236:
	addq	$24, %rbx
	addq	$24, %r12
	cmpq	%rbx, %r13
	jne	L241
	movq	(%rsp), %rax
	movq	%r13, 168(%rsp)
	leaq	72(%rax), %rbx
L242:
	subq	$24, %rbx
	movq	(%rbx), %rdi
	testq	%rdi, %rdi
	je	L251
	call	__ZdlPv
L251:
	cmpq	(%rsp), %rbx
	jne	L242
	leaq	160(%rsp), %rax
	leaq	192(%rsp), %rcx
	movq	%rax, %rsi
	movq	%rax, 16(%rsp)
	movq	%rcx, %rdi
	movq	%rcx, 24(%rsp)
LEHB17:
	call	__ZNSt6vectorIS_IfSaIfEESaIS1_EEC1ERKS3_
LEHE17:
	movl	$24, %edi
LEHB18:
	call	__Znwm
LEHE18:
	movq	8(%rsp), %rdi
	movq	%rax, %rbx
	movq	%rax, (%rsp)
	movq	$100, 256(%rsp)
	movq	$3, 264(%rsp)
	movq	$0, 272(%rsp)
	movq	$0, 280(%rsp)
	movq	(%rdi), %rax
	movq	$0, 288(%rsp)
	movq	%rax, (%rbx)
	movq	8(%rdi), %rax
	movq	%rax, 8(%rbx)
	movq	16(%rdi), %rax
	movl	$24, %edi
	movq	%rax, 16(%rbx)
LEHB19:
	call	__Znwm
LEHE19:
	movq	(%rbx), %rcx
	leaq	24(%rax), %rdx
	xorl	%r15d, %r15d
	movq	%rax, 272(%rsp)
	movq	200(%rsp), %r13
	movq	%rdx, 288(%rsp)
	movq	%rdx, 280(%rsp)
	movq	$0, 296(%rsp)
	movq	%rcx, (%rax)
	movq	8(%rbx), %rcx
	movq	$0, 304(%rsp)
	movq	$0, 312(%rsp)
	movq	%rcx, 8(%rax)
	movq	16(%rbx), %rcx
	movq	%r13, %rbx
	subq	192(%rsp), %rbx
	movq	%rcx, 16(%rax)
	movabsq	$-6148914691236517205, %rax
	movq	%rbx, %rdx
	sarq	$3, %rdx
	imulq	%rdx, %rax
	testq	%rax, %rax
	je	L253
	movabsq	$768614336404564650, %rdx
	cmpq	%rdx, %rax
	ja	L400
	movq	%rbx, %rdi
LEHB20:
	call	__Znwm
LEHE20:
	movq	200(%rsp), %r13
	movq	%rax, %r15
L253:
	movq	192(%rsp), %rbp
	addq	%r15, %rbx
	movq	%r15, 296(%rsp)
	movq	%r15, 304(%rsp)
	movq	%rbx, 312(%rsp)
	cmpq	%rbp, %r13
	je	L295
	movabsq	$4611686018427387903, %r14
	movq	%r15, %rbx
	.align 4
L262:
	testq	%rbx, %rbx
	je	L256
	movq	8(%rbp), %r12
	xorl	%ecx, %ecx
	subq	0(%rbp), %r12
	movq	$0, (%rbx)
	movq	$0, 8(%rbx)
	movq	$0, 16(%rbx)
	movq	%r12, %rax
	sarq	$2, %rax
	testq	%rax, %rax
	je	L258
	cmpq	%r14, %rax
	ja	L401
	movq	%r12, %rdi
LEHB21:
	call	__Znwm
LEHE21:
	movq	%rax, %rcx
L258:
	leaq	(%rcx,%r12), %rax
	movq	%rcx, (%rbx)
	movq	%rax, 16(%rbx)
	movq	%rcx, 8(%rbx)
	movq	0(%rbp), %rsi
	movq	8(%rbp), %r12
	subq	%rsi, %r12
	movq	%r12, %rax
	sarq	$2, %rax
	testq	%rax, %rax
	je	L261
	movq	%rcx, %rdi
	movq	%r12, %rdx
	call	_memmove
	movq	%rax, %rcx
L261:
	addq	%rcx, %r12
	movq	%r12, 8(%rbx)
L256:
	addq	$24, %rbp
	addq	$24, %rbx
	cmpq	%rbp, %r13
	jne	L262
L255:
	movq	(%rsp), %rdi
	movq	%rbx, 304(%rsp)
	leaq	256(%rsp), %r13
	call	__ZdlPv
	movq	24(%rsp), %rdi
	call	__ZNSt6vectorIS_IfSaIfEESaIS1_EED1Ev
	leaq	224(%rsp), %rdi
	movq	%r13, %rsi
	leaq	128(%rsp), %rdx
LEHB22:
	call	__Z20kronvecstack_dot_vecIfESt6vectorIT_SaIS1_EERK9basic_kvsIS1_ERKS3_
LEHE22:
	movq	224(%rsp), %rbx
	movq	232(%rsp), %r12
	movq	__ZSt4cout@GOTPCREL(%rip), %rbp
	cmpq	%rbx, %r12
	je	L276
	.align 4
L275:
	movq	%rbp, %rdi
	vxorpd	%xmm0, %xmm0, %xmm0
	vcvtss2sd	(%rbx), %xmm0, %xmm0
LEHB23:
	call	__ZNSo9_M_insertIdEERSoT_
	leaq	LC8(%rip), %rsi
	movl	$2, %edx
	movq	%rax, %rdi
	call	__ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	addq	$4, %rbx
	cmpq	%rbx, %r12
	jne	L275
L276:
	movq	%rbp, %rdi
	call	__ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_
LEHE23:
	movq	224(%rsp), %rdi
	testq	%rdi, %rdi
	je	L277
	call	__ZdlPv
L277:
	movq	%r13, %rdi
	call	__ZN9basic_kvsIfED1Ev
	movq	16(%rsp), %rdi
	call	__ZNSt6vectorIS_IfSaIfEESaIS1_EED1Ev
	movq	8(%rsp), %rdi
	call	__ZdlPv
	movq	128(%rsp), %rdi
	testq	%rdi, %rdi
	je	L278
	call	__ZdlPv
L278:
	movq	96(%rsp), %rdi
	testq	%rdi, %rdi
	je	L279
	call	__ZdlPv
L279:
	movq	64(%rsp), %rdi
	testq	%rdi, %rdi
	je	L280
	call	__ZdlPv
L280:
	movq	32(%rsp), %rdi
	testq	%rdi, %rdi
	je	L391
	call	__ZdlPv
L391:
	addq	$408, %rsp
LCFI84:
	xorl	%eax, %eax
	popq	%rbx
LCFI85:
	popq	%rbp
LCFI86:
	popq	%r12
LCFI87:
	popq	%r13
LCFI88:
	popq	%r14
LCFI89:
	popq	%r15
LCFI90:
	ret
L295:
LCFI91:
	movq	%r15, %rbx
	jmp	L255
L399:
LEHB24:
	call	__ZSt17__throw_bad_allocv
LEHE24:
L306:
	movq	%rax, %rdi
	vzeroupper
	call	___cxa_begin_catch
L246:
	movq	16(%rsp), %rax
	cmpq	%rbx, %rax
	je	L244
	movq	(%rax), %rdi
	testq	%rdi, %rdi
	je	L245
	call	__ZdlPv
L245:
	addq	$24, 16(%rsp)
	jmp	L246
L401:
LEHB25:
	call	__ZSt17__throw_bad_allocv
LEHE25:
L309:
	movq	%rax, %rdi
	vzeroupper
	call	___cxa_begin_catch
L267:
	cmpq	%r15, %rbx
	je	L265
	movq	(%r15), %rdi
	testq	%rdi, %rdi
	je	L266
	call	__ZdlPv
L266:
	movq	%r15, %rax
	addq	$24, %rax
	movq	%rax, %r15
	jmp	L267
L265:
LEHB26:
	call	___cxa_rethrow
LEHE26:
L244:
LEHB27:
	call	___cxa_rethrow
LEHE27:
L308:
	movq	%rax, %rbx
	vzeroupper
	call	___cxa_end_catch
	movq	296(%rsp), %rdi
	testq	%rdi, %rdi
	je	L270
	call	__ZdlPv
L270:
	movq	272(%rsp), %rdi
	testq	%rdi, %rdi
	je	L272
	call	__ZdlPv
L272:
	movq	(%rsp), %rdi
	call	__ZdlPv
L284:
	movq	24(%rsp), %rdi
	call	__ZNSt6vectorIS_IfSaIfEESaIS1_EED1Ev
L285:
	movq	16(%rsp), %rdi
	call	__ZNSt6vectorIS_IfSaIfEESaIS1_EED1Ev
L283:
	movq	8(%rsp), %rdi
	call	__ZdlPv
L289:
	movq	128(%rsp), %rdi
	testq	%rdi, %rdi
	je	L291
	call	__ZdlPv
L291:
	movq	96(%rsp), %rdi
	testq	%rdi, %rdi
	je	L292
	call	__ZdlPv
L292:
	movq	64(%rsp), %rdi
	testq	%rdi, %rdi
	je	L293
	call	__ZdlPv
L293:
	movq	32(%rsp), %rdi
	testq	%rdi, %rdi
	je	L294
	call	__ZdlPv
L294:
	movq	%rbx, %rdi
LEHB28:
	call	__Unwind_Resume
LEHE28:
L305:
	movq	%rax, %rbx
	vzeroupper
	call	___cxa_end_catch
L248:
	movq	160(%rsp), %rdi
	testq	%rdi, %rdi
	je	L249
	call	__ZdlPv
L249:
	movq	(%rsp), %rax
	leaq	72(%rax), %rbp
L250:
	subq	$24, %rbp
	movq	0(%rbp), %rdi
	testq	%rdi, %rdi
	je	L282
	call	__ZdlPv
L282:
	cmpq	(%rsp), %rbp
	jne	L250
	jmp	L283
L400:
LEHB29:
	call	__ZSt17__throw_bad_allocv
LEHE29:
L307:
	movq	%rax, %rbx
	vzeroupper
	jmp	L270
L298:
	movq	%rax, %rbx
	vzeroupper
	jmp	L283
L300:
	movq	%rax, %rbx
	vzeroupper
	jmp	L284
L299:
	movq	%rax, %rbx
	vzeroupper
	jmp	L285
L304:
	movq	%rax, %rbx
	vzeroupper
	jmp	L248
L296:
	movq	%rax, %rbx
	vzeroupper
	jmp	L291
L297:
	movq	%rax, %rbx
	vzeroupper
	jmp	L289
L301:
	movq	%rax, %rbx
	vzeroupper
	jmp	L272
L303:
	movq	224(%rsp), %rdi
	movq	%rax, %rbx
	testq	%rdi, %rdi
	je	L390
	vzeroupper
	call	__ZdlPv
L288:
	movq	%r13, %rdi
	call	__ZN9basic_kvsIfED1Ev
	jmp	L285
L302:
	movq	%rax, %rbx
	vzeroupper
	jmp	L288
L390:
	vzeroupper
	jmp	L288
LFE8134:
	.section __DATA,__gcc_except_tab
GCC_except_table2:
	.align 3
LLSDA8134:
	.byte	0xff
	.byte	0
	.byte	0xfc,0x1
	.byte	0x3
	.byte	0xea,0x1
	.set L$set$30,LEHB12-LFB8134
	.long L$set$30
	.set L$set$31,LEHE12-LEHB12
	.long L$set$31
	.set L$set$32,L296-LFB8134
	.long L$set$32
	.byte	0
	.set L$set$33,LEHB13-LFB8134
	.long L$set$33
	.set L$set$34,LEHE13-LEHB13
	.long L$set$34
	.set L$set$35,L297-LFB8134
	.long L$set$35
	.byte	0
	.set L$set$36,LEHB14-LFB8134
	.long L$set$36
	.set L$set$37,LEHE14-LEHB14
	.long L$set$37
	.set L$set$38,L298-LFB8134
	.long L$set$38
	.byte	0
	.set L$set$39,LEHB15-LFB8134
	.long L$set$39
	.set L$set$40,LEHE15-LEHB15
	.long L$set$40
	.set L$set$41,L304-LFB8134
	.long L$set$41
	.byte	0
	.set L$set$42,LEHB16-LFB8134
	.long L$set$42
	.set L$set$43,LEHE16-LEHB16
	.long L$set$43
	.set L$set$44,L306-LFB8134
	.long L$set$44
	.byte	0x1
	.set L$set$45,LEHB17-LFB8134
	.long L$set$45
	.set L$set$46,LEHE17-LEHB17
	.long L$set$46
	.set L$set$47,L299-LFB8134
	.long L$set$47
	.byte	0
	.set L$set$48,LEHB18-LFB8134
	.long L$set$48
	.set L$set$49,LEHE18-LEHB18
	.long L$set$49
	.set L$set$50,L300-LFB8134
	.long L$set$50
	.byte	0
	.set L$set$51,LEHB19-LFB8134
	.long L$set$51
	.set L$set$52,LEHE19-LEHB19
	.long L$set$52
	.set L$set$53,L301-LFB8134
	.long L$set$53
	.byte	0
	.set L$set$54,LEHB20-LFB8134
	.long L$set$54
	.set L$set$55,LEHE20-LEHB20
	.long L$set$55
	.set L$set$56,L307-LFB8134
	.long L$set$56
	.byte	0
	.set L$set$57,LEHB21-LFB8134
	.long L$set$57
	.set L$set$58,LEHE21-LEHB21
	.long L$set$58
	.set L$set$59,L309-LFB8134
	.long L$set$59
	.byte	0x1
	.set L$set$60,LEHB22-LFB8134
	.long L$set$60
	.set L$set$61,LEHE22-LEHB22
	.long L$set$61
	.set L$set$62,L302-LFB8134
	.long L$set$62
	.byte	0
	.set L$set$63,LEHB23-LFB8134
	.long L$set$63
	.set L$set$64,LEHE23-LEHB23
	.long L$set$64
	.set L$set$65,L303-LFB8134
	.long L$set$65
	.byte	0
	.set L$set$66,LEHB24-LFB8134
	.long L$set$66
	.set L$set$67,LEHE24-LEHB24
	.long L$set$67
	.set L$set$68,L306-LFB8134
	.long L$set$68
	.byte	0x1
	.set L$set$69,LEHB25-LFB8134
	.long L$set$69
	.set L$set$70,LEHE25-LEHB25
	.long L$set$70
	.set L$set$71,L309-LFB8134
	.long L$set$71
	.byte	0x1
	.set L$set$72,LEHB26-LFB8134
	.long L$set$72
	.set L$set$73,LEHE26-LEHB26
	.long L$set$73
	.set L$set$74,L308-LFB8134
	.long L$set$74
	.byte	0
	.set L$set$75,LEHB27-LFB8134
	.long L$set$75
	.set L$set$76,LEHE27-LEHB27
	.long L$set$76
	.set L$set$77,L305-LFB8134
	.long L$set$77
	.byte	0
	.set L$set$78,LEHB28-LFB8134
	.long L$set$78
	.set L$set$79,LEHE28-LEHB28
	.long L$set$79
	.long	0
	.byte	0
	.set L$set$80,LEHB29-LFB8134
	.long L$set$80
	.set L$set$81,LEHE29-LEHB29
	.long L$set$81
	.set L$set$82,L307-LFB8134
	.long L$set$82
	.byte	0
	.byte	0x1
	.byte	0
	.align 3
	.quad	0
	.section __TEXT,__text_startup,regular,pure_instructions
	.section __TEXT,__text_cold,regular,pure_instructions
LCOLDE9:
	.section __TEXT,__text_startup,regular,pure_instructions
LHOTE9:
	.section __TEXT,__text_cold,regular,pure_instructions
LCOLDB10:
	.section __TEXT,__text_startup,regular,pure_instructions
LHOTB10:
	.align 4
__GLOBAL__sub_I_play.cpp:
LFB8795:
	leaq	__ZStL8__ioinit(%rip), %rdi
	subq	$8, %rsp
LCFI92:
	call	__ZNSt8ios_base4InitC1Ev
	movq	__ZNSt8ios_base4InitD1Ev@GOTPCREL(%rip), %rdi
	leaq	___dso_handle(%rip), %rdx
	addq	$8, %rsp
LCFI93:
	leaq	__ZStL8__ioinit(%rip), %rsi
	jmp	___cxa_atexit
LFE8795:
	.section __TEXT,__text_cold,regular,pure_instructions
LCOLDE10:
	.section __TEXT,__text_startup,regular,pure_instructions
LHOTE10:
	.const
	.align 4
_._72:
	.quad	10
	.quad	10
	.quad	10
	.static_data
__ZStL8__ioinit:
	.space	1
	.section __TEXT,__eh_frame,coalesced,no_toc+strip_static_syms+live_support
EH_frame1:
	.set L$set$83,LECIE1-LSCIE1
	.long L$set$83
LSCIE1:
	.long	0
	.byte	0x1
	.ascii "zPLR\0"
	.byte	0x1
	.byte	0x78
	.byte	0x10
	.byte	0x7
	.byte	0x9b
	.long	___gxx_personality_v0+4@GOTPCREL
	.byte	0x10
	.byte	0x10
	.byte	0xc
	.byte	0x7
	.byte	0x8
	.byte	0x90
	.byte	0x1
	.align 3
LECIE1:
LSFDE1:
	.set L$set$84,LEFDE1-LASFDE1
	.long L$set$84
LASFDE1:
	.long	LASFDE1-EH_frame1
	.quad	LFB8137-.
	.set L$set$85,LFE8137-LFB8137
	.quad L$set$85
	.byte	0x8
	.quad	0
	.byte	0x4
	.set L$set$86,LCFI0-LFB8137
	.long L$set$86
	.byte	0xe
	.byte	0x10
	.byte	0x8c
	.byte	0x2
	.byte	0x4
	.set L$set$87,LCFI1-LCFI0
	.long L$set$87
	.byte	0xe
	.byte	0x18
	.byte	0x86
	.byte	0x3
	.byte	0x4
	.set L$set$88,LCFI2-LCFI1
	.long L$set$88
	.byte	0xe
	.byte	0x20
	.byte	0x83
	.byte	0x4
	.byte	0x4
	.set L$set$89,LCFI3-LCFI2
	.long L$set$89
	.byte	0xa
	.byte	0xe
	.byte	0x18
	.byte	0x4
	.set L$set$90,LCFI4-LCFI3
	.long L$set$90
	.byte	0xe
	.byte	0x10
	.byte	0x4
	.set L$set$91,LCFI5-LCFI4
	.long L$set$91
	.byte	0xe
	.byte	0x8
	.byte	0x4
	.set L$set$92,LCFI6-LCFI5
	.long L$set$92
	.byte	0xb
	.byte	0x4
	.set L$set$93,LCFI7-LCFI6
	.long L$set$93
	.byte	0xe
	.byte	0x18
	.byte	0x4
	.set L$set$94,LCFI8-LCFI7
	.long L$set$94
	.byte	0xe
	.byte	0x10
	.byte	0x4
	.set L$set$95,LCFI9-LCFI8
	.long L$set$95
	.byte	0xe
	.byte	0x8
	.align 3
LEFDE1:
LSFDE3:
	.set L$set$96,LEFDE3-LASFDE3
	.long L$set$96
LASFDE3:
	.long	LASFDE3-EH_frame1
	.quad	LFB8228-.
	.set L$set$97,LFE8228-LFB8228
	.quad L$set$97
	.byte	0x8
	.quad	0
	.byte	0x4
	.set L$set$98,LCFI10-LFB8228
	.long L$set$98
	.byte	0xe
	.byte	0x10
	.byte	0x8c
	.byte	0x2
	.byte	0x4
	.set L$set$99,LCFI11-LCFI10
	.long L$set$99
	.byte	0xe
	.byte	0x18
	.byte	0x86
	.byte	0x3
	.byte	0x4
	.set L$set$100,LCFI12-LCFI11
	.long L$set$100
	.byte	0xe
	.byte	0x20
	.byte	0x83
	.byte	0x4
	.byte	0x4
	.set L$set$101,LCFI13-LCFI12
	.long L$set$101
	.byte	0xa
	.byte	0xe
	.byte	0x18
	.byte	0x4
	.set L$set$102,LCFI14-LCFI13
	.long L$set$102
	.byte	0xe
	.byte	0x10
	.byte	0x4
	.set L$set$103,LCFI15-LCFI14
	.long L$set$103
	.byte	0xe
	.byte	0x8
	.byte	0x4
	.set L$set$104,LCFI16-LCFI15
	.long L$set$104
	.byte	0xb
	.align 3
LEFDE3:
LSFDE5:
	.set L$set$105,LEFDE5-LASFDE5
	.long L$set$105
LASFDE5:
	.long	LASFDE5-EH_frame1
	.quad	LFB8247-.
	.set L$set$106,LFE8247-LFB8247
	.quad L$set$106
	.byte	0x8
	.quad	0
	.byte	0x4
	.set L$set$107,LCFI17-LFB8247
	.long L$set$107
	.byte	0xe
	.byte	0x10
	.byte	0x8c
	.byte	0x2
	.byte	0x4
	.set L$set$108,LCFI18-LCFI17
	.long L$set$108
	.byte	0xe
	.byte	0x18
	.byte	0x86
	.byte	0x3
	.byte	0x4
	.set L$set$109,LCFI19-LCFI18
	.long L$set$109
	.byte	0xe
	.byte	0x20
	.byte	0x83
	.byte	0x4
	.byte	0x4
	.set L$set$110,LCFI20-LCFI19
	.long L$set$110
	.byte	0xa
	.byte	0xe
	.byte	0x18
	.byte	0x4
	.set L$set$111,LCFI21-LCFI20
	.long L$set$111
	.byte	0xe
	.byte	0x10
	.byte	0x4
	.set L$set$112,LCFI22-LCFI21
	.long L$set$112
	.byte	0xe
	.byte	0x8
	.byte	0x4
	.set L$set$113,LCFI23-LCFI22
	.long L$set$113
	.byte	0xb
	.byte	0x4
	.set L$set$114,LCFI24-LCFI23
	.long L$set$114
	.byte	0xe
	.byte	0x18
	.byte	0x4
	.set L$set$115,LCFI25-LCFI24
	.long L$set$115
	.byte	0xe
	.byte	0x10
	.byte	0x4
	.set L$set$116,LCFI26-LCFI25
	.long L$set$116
	.byte	0xe
	.byte	0x8
	.align 3
LEFDE5:
LSFDE7:
	.set L$set$117,LEFDE7-LASFDE7
	.long L$set$117
LASFDE7:
	.long	LASFDE7-EH_frame1
	.quad	LFB8253-.
	.set L$set$118,LFE8253-LFB8253
	.quad L$set$118
	.byte	0x8
	.quad	LLSDA8253-.
	.byte	0x4
	.set L$set$119,LCFI27-LFB8253
	.long L$set$119
	.byte	0xe
	.byte	0x10
	.byte	0x8f
	.byte	0x2
	.byte	0x4
	.set L$set$120,LCFI28-LCFI27
	.long L$set$120
	.byte	0xe
	.byte	0x18
	.byte	0x8e
	.byte	0x3
	.byte	0x4
	.set L$set$121,LCFI29-LCFI28
	.long L$set$121
	.byte	0xe
	.byte	0x20
	.byte	0x8d
	.byte	0x4
	.byte	0x4
	.set L$set$122,LCFI30-LCFI29
	.long L$set$122
	.byte	0xe
	.byte	0x28
	.byte	0x8c
	.byte	0x5
	.byte	0x4
	.set L$set$123,LCFI31-LCFI30
	.long L$set$123
	.byte	0xe
	.byte	0x30
	.byte	0x86
	.byte	0x6
	.byte	0x4
	.set L$set$124,LCFI32-LCFI31
	.long L$set$124
	.byte	0xe
	.byte	0x38
	.byte	0x83
	.byte	0x7
	.byte	0x4
	.set L$set$125,LCFI33-LCFI32
	.long L$set$125
	.byte	0xe
	.byte	0x50
	.byte	0x4
	.set L$set$126,LCFI34-LCFI33
	.long L$set$126
	.byte	0xa
	.byte	0xe
	.byte	0x38
	.byte	0x4
	.set L$set$127,LCFI35-LCFI34
	.long L$set$127
	.byte	0xe
	.byte	0x30
	.byte	0x4
	.set L$set$128,LCFI36-LCFI35
	.long L$set$128
	.byte	0xe
	.byte	0x28
	.byte	0x4
	.set L$set$129,LCFI37-LCFI36
	.long L$set$129
	.byte	0xe
	.byte	0x20
	.byte	0x4
	.set L$set$130,LCFI38-LCFI37
	.long L$set$130
	.byte	0xe
	.byte	0x18
	.byte	0x4
	.set L$set$131,LCFI39-LCFI38
	.long L$set$131
	.byte	0xe
	.byte	0x10
	.byte	0x4
	.set L$set$132,LCFI40-LCFI39
	.long L$set$132
	.byte	0xe
	.byte	0x8
	.byte	0x4
	.set L$set$133,LCFI41-LCFI40
	.long L$set$133
	.byte	0xb
	.align 3
LEFDE7:
LSFDE9:
	.set L$set$134,LEFDE9-LASFDE9
	.long L$set$134
LASFDE9:
	.long	LASFDE9-EH_frame1
	.quad	LFB8559-.
	.set L$set$135,LFE8559-LFB8559
	.quad L$set$135
	.byte	0x8
	.quad	0
	.byte	0x4
	.set L$set$136,LCFI42-LFB8559
	.long L$set$136
	.byte	0xe
	.byte	0x10
	.byte	0x8e
	.byte	0x2
	.byte	0x4
	.set L$set$137,LCFI43-LCFI42
	.long L$set$137
	.byte	0xe
	.byte	0x18
	.byte	0x8d
	.byte	0x3
	.byte	0x4
	.set L$set$138,LCFI44-LCFI43
	.long L$set$138
	.byte	0xe
	.byte	0x20
	.byte	0x8c
	.byte	0x4
	.byte	0x4
	.set L$set$139,LCFI45-LCFI44
	.long L$set$139
	.byte	0xe
	.byte	0x28
	.byte	0x86
	.byte	0x5
	.byte	0x4
	.set L$set$140,LCFI46-LCFI45
	.long L$set$140
	.byte	0xe
	.byte	0x30
	.byte	0x83
	.byte	0x6
	.byte	0x4
	.set L$set$141,LCFI47-LCFI46
	.long L$set$141
	.byte	0xa
	.byte	0xe
	.byte	0x28
	.byte	0x4
	.set L$set$142,LCFI48-LCFI47
	.long L$set$142
	.byte	0xe
	.byte	0x20
	.byte	0x4
	.set L$set$143,LCFI49-LCFI48
	.long L$set$143
	.byte	0xe
	.byte	0x18
	.byte	0x4
	.set L$set$144,LCFI50-LCFI49
	.long L$set$144
	.byte	0xe
	.byte	0x10
	.byte	0x4
	.set L$set$145,LCFI51-LCFI50
	.long L$set$145
	.byte	0xe
	.byte	0x8
	.byte	0x4
	.set L$set$146,LCFI52-LCFI51
	.long L$set$146
	.byte	0xb
	.align 3
LEFDE9:
LSFDE11:
	.set L$set$147,LEFDE11-LASFDE11
	.long L$set$147
LASFDE11:
	.long	LASFDE11-EH_frame1
	.quad	LFB8698-.
	.set L$set$148,LFE8698-LFB8698
	.quad L$set$148
	.byte	0x8
	.quad	0
	.byte	0x4
	.set L$set$149,LCFI53-LFB8698
	.long L$set$149
	.byte	0xe
	.byte	0x10
	.byte	0x8f
	.byte	0x2
	.byte	0x4
	.set L$set$150,LCFI54-LCFI53
	.long L$set$150
	.byte	0xe
	.byte	0x18
	.byte	0x8e
	.byte	0x3
	.byte	0x4
	.set L$set$151,LCFI55-LCFI54
	.long L$set$151
	.byte	0xe
	.byte	0x20
	.byte	0x8d
	.byte	0x4
	.byte	0x4
	.set L$set$152,LCFI56-LCFI55
	.long L$set$152
	.byte	0xe
	.byte	0x28
	.byte	0x8c
	.byte	0x5
	.byte	0x4
	.set L$set$153,LCFI57-LCFI56
	.long L$set$153
	.byte	0xe
	.byte	0x30
	.byte	0x86
	.byte	0x6
	.byte	0x4
	.set L$set$154,LCFI58-LCFI57
	.long L$set$154
	.byte	0xe
	.byte	0x38
	.byte	0x83
	.byte	0x7
	.byte	0x4
	.set L$set$155,LCFI59-LCFI58
	.long L$set$155
	.byte	0xe
	.byte	0x50
	.byte	0x4
	.set L$set$156,LCFI60-LCFI59
	.long L$set$156
	.byte	0xa
	.byte	0xe
	.byte	0x38
	.byte	0x4
	.set L$set$157,LCFI61-LCFI60
	.long L$set$157
	.byte	0xe
	.byte	0x30
	.byte	0x4
	.set L$set$158,LCFI62-LCFI61
	.long L$set$158
	.byte	0xe
	.byte	0x28
	.byte	0x4
	.set L$set$159,LCFI63-LCFI62
	.long L$set$159
	.byte	0xe
	.byte	0x20
	.byte	0x4
	.set L$set$160,LCFI64-LCFI63
	.long L$set$160
	.byte	0xe
	.byte	0x18
	.byte	0x4
	.set L$set$161,LCFI65-LCFI64
	.long L$set$161
	.byte	0xe
	.byte	0x10
	.byte	0x4
	.set L$set$162,LCFI66-LCFI65
	.long L$set$162
	.byte	0xe
	.byte	0x8
	.byte	0x4
	.set L$set$163,LCFI67-LCFI66
	.long L$set$163
	.byte	0xb
	.align 3
LEFDE11:
LSFDE13:
	.set L$set$164,LEFDE13-LASFDE13
	.long L$set$164
LASFDE13:
	.long	LASFDE13-EH_frame1
	.quad	LFB8257-.
	.set L$set$165,LFE8257-LFB8257
	.quad L$set$165
	.byte	0x8
	.quad	LLSDA8257-.
	.byte	0x4
	.set L$set$166,LCFI68-LFB8257
	.long L$set$166
	.byte	0xc
	.byte	0xa
	.byte	0
	.byte	0x4
	.set L$set$167,LCFI69-LCFI68
	.long L$set$167
	.byte	0x10
	.byte	0x6
	.byte	0x2
	.byte	0x76
	.byte	0
	.byte	0x4
	.set L$set$168,LCFI70-LCFI69
	.long L$set$168
	.byte	0x10
	.byte	0xf
	.byte	0x2
	.byte	0x76
	.byte	0x78
	.byte	0x4
	.set L$set$169,LCFI71-LCFI70
	.long L$set$169
	.byte	0x10
	.byte	0xe
	.byte	0x2
	.byte	0x76
	.byte	0x70
	.byte	0x4
	.set L$set$170,LCFI72-LCFI71
	.long L$set$170
	.byte	0xf
	.byte	0x3
	.byte	0x76
	.byte	0x58
	.byte	0x6
	.byte	0x10
	.byte	0xd
	.byte	0x2
	.byte	0x76
	.byte	0x68
	.byte	0x10
	.byte	0xc
	.byte	0x2
	.byte	0x76
	.byte	0x60
	.byte	0x4
	.set L$set$171,LCFI73-LCFI72
	.long L$set$171
	.byte	0x10
	.byte	0x3
	.byte	0x2
	.byte	0x76
	.byte	0x50
	.byte	0x4
	.set L$set$172,LCFI74-LCFI73
	.long L$set$172
	.byte	0xa
	.byte	0xc
	.byte	0xa
	.byte	0
	.byte	0x4
	.set L$set$173,LCFI75-LCFI74
	.long L$set$173
	.byte	0xc
	.byte	0x7
	.byte	0x8
	.byte	0x4
	.set L$set$174,LCFI76-LCFI75
	.long L$set$174
	.byte	0xb
	.align 3
LEFDE13:
LSFDE15:
	.set L$set$175,LEFDE15-LASFDE15
	.long L$set$175
LASFDE15:
	.long	LASFDE15-EH_frame1
	.quad	LFB8134-.
	.set L$set$176,LFE8134-LFB8134
	.quad L$set$176
	.byte	0x8
	.quad	LLSDA8134-.
	.byte	0x4
	.set L$set$177,LCFI77-LFB8134
	.long L$set$177
	.byte	0xe
	.byte	0x10
	.byte	0x8f
	.byte	0x2
	.byte	0x4
	.set L$set$178,LCFI78-LCFI77
	.long L$set$178
	.byte	0xe
	.byte	0x18
	.byte	0x8e
	.byte	0x3
	.byte	0x4
	.set L$set$179,LCFI79-LCFI78
	.long L$set$179
	.byte	0xe
	.byte	0x20
	.byte	0x8d
	.byte	0x4
	.byte	0x4
	.set L$set$180,LCFI80-LCFI79
	.long L$set$180
	.byte	0xe
	.byte	0x28
	.byte	0x8c
	.byte	0x5
	.byte	0x4
	.set L$set$181,LCFI81-LCFI80
	.long L$set$181
	.byte	0xe
	.byte	0x30
	.byte	0x86
	.byte	0x6
	.byte	0x4
	.set L$set$182,LCFI82-LCFI81
	.long L$set$182
	.byte	0xe
	.byte	0x38
	.byte	0x83
	.byte	0x7
	.byte	0x4
	.set L$set$183,LCFI83-LCFI82
	.long L$set$183
	.byte	0xe
	.byte	0xd0,0x3
	.byte	0x4
	.set L$set$184,LCFI84-LCFI83
	.long L$set$184
	.byte	0xa
	.byte	0xe
	.byte	0x38
	.byte	0x4
	.set L$set$185,LCFI85-LCFI84
	.long L$set$185
	.byte	0xe
	.byte	0x30
	.byte	0x4
	.set L$set$186,LCFI86-LCFI85
	.long L$set$186
	.byte	0xe
	.byte	0x28
	.byte	0x4
	.set L$set$187,LCFI87-LCFI86
	.long L$set$187
	.byte	0xe
	.byte	0x20
	.byte	0x4
	.set L$set$188,LCFI88-LCFI87
	.long L$set$188
	.byte	0xe
	.byte	0x18
	.byte	0x4
	.set L$set$189,LCFI89-LCFI88
	.long L$set$189
	.byte	0xe
	.byte	0x10
	.byte	0x4
	.set L$set$190,LCFI90-LCFI89
	.long L$set$190
	.byte	0xe
	.byte	0x8
	.byte	0x4
	.set L$set$191,LCFI91-LCFI90
	.long L$set$191
	.byte	0xb
	.align 3
LEFDE15:
LSFDE17:
	.set L$set$192,LEFDE17-LASFDE17
	.long L$set$192
LASFDE17:
	.long	LASFDE17-EH_frame1
	.quad	LFB8795-.
	.set L$set$193,LFE8795-LFB8795
	.quad L$set$193
	.byte	0x8
	.quad	0
	.byte	0x4
	.set L$set$194,LCFI92-LFB8795
	.long L$set$194
	.byte	0xe
	.byte	0x10
	.byte	0x4
	.set L$set$195,LCFI93-LCFI92
	.long L$set$195
	.byte	0xe
	.byte	0x8
	.align 3
LEFDE17:
	.mod_init_func
	.align 3
	.quad	__GLOBAL__sub_I_play.cpp
	.constructor
	.destructor
	.align 1
	.subsections_via_symbols
